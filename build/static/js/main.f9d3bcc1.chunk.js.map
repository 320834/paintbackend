{"version":3,"sources":["Components/Toolbar.jsx","Components/Canvas.jsx","Components/Navigation.jsx","App.js","serviceWorker.js","index.js"],"names":["Toolbar","state","color","react_default","a","createElement","Fragment","className","onChange","this","props","onClickSize","value","lib","width","onChangeComplete","onColorChange","React","Component","SocketInstance","socketID","Object","classCallCheck","x","y","paint","push","Canvas","_this","possibleConstructorReturn","getPrototypeOf","call","canvasHeight","canvasWidth","strokeStyle","linewidth","positionX","positionY","stroke","socket","socketIOClient","ip","pageUrl","users","connectedSockets","updateDimensions","saveDataDraw","arr","context","i","length","lineJoin","lineWidth","beginPath","moveTo","lineTo","closePath","handleClick","event","canvas","current","getContext","boardX","clientX","getBoundingClientRect","boardY","clientY","fillStyle","arc","Math","PI","fill","emit","handleClickReceive","fillFuncHelper","startX","startY","myImageData","getImageData","selectedColor","hexToRGB","boardColor","data","fillFunc","posX","posY","currentImageData","fillRect","drawFunction","mouseX","mouseY","drawFunctionRecieving","socketObj","handleMouseDown","id","setState","handleMouseMove","tempX","tempY","handleMouseUp","jsonObj","fetch","method","mode","cache","credentials","headers","Content-Type","body","JSON","stringify","then","response","handleClear","clear","json","handleClearReceive","handleColorChange","picker","hex","hoverSketch","toggleStroke","toggleFill","toggleSize","target","red","charAt","green","blue","parseInt","changeScroll","bottomScroll","scrollLeft","topScroll","getToolComp","Components_Toolbar","onClearClick","onClickStroke","onClickFill","createRef","tools","_this2","Map","window","addEventListener","_this3","on","socketIDIterator","has","set","size","console","log","get","setPaintTrue","setPaintFalse","delete","divStyle","height","class","onScroll","ref","style","onClick","onMouseDown","onMouseMove","onMouseUp","react_router_dom","react_router","exact","path","component","Navigation","onClickAbout","alert","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","tabindex","role","aria-labelledby","aria-hidden","data-dismiss","App","welcomeText","welcomeDiv","componentDidMount","innerWidth","welcomeButton","click","Components_Navigation","Components_Canvas","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f9d3bcc1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../../node_modules/bootstrap/dist/css/bootstrap.css\";\r\nimport \"../../node_modules/popper.js/dist/popper.js\";\r\nimport \"../../node_modules/jquery/dist/jquery.js\";\r\nimport \"../../node_modules/bootstrap/dist/js/bootstrap.js\";\r\n\r\nimport \"../ComponentStyle/Toolbar.css\";\r\nimport { SketchPicker } from \"react-color\";\r\n\r\nclass Toolbar extends React.Component {\r\n  state = {\r\n    color: \"#000000\"\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"lineWidthDiv\">\r\n          <h6 className=\"lineWidthHeader\">Brush Size: </h6>\r\n          <select onChange={this.props.onClickSize}>\r\n            <option value=\"4\">4px</option>\r\n            <option value=\"6\">6px</option>\r\n            <option value=\"8\">8px</option>\r\n            <option value=\"10\">10px</option>\r\n            <option value=\"12\">12px</option>\r\n            <option value=\"16\">16px</option>\r\n            <option value=\"20\">20px</option>\r\n            <option value=\"30\">30px</option>\r\n          </select>\r\n        </div>\r\n        <br />\r\n        <SketchPicker\r\n          color={this.props.color}\r\n          width={140}\r\n          onChangeComplete={this.props.onColorChange}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toolbar;\r\n","import React from \"react\";\r\nimport \"../../node_modules/bootstrap/dist/css/bootstrap.css\";\r\nimport \"../../node_modules/popper.js/dist/popper.js\";\r\nimport \"../../node_modules/jquery/dist/jquery.js\";\r\nimport \"../../node_modules/bootstrap/dist/js/bootstrap.js\";\r\nimport \"../ComponentStyle/CanvasStyle.css\";\r\nimport Toolbar from \"./Toolbar\";\r\n\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nclass SocketInstance {\r\n  constructor(socketID) {\r\n    this.socketID = socketID;\r\n    this.x = [];\r\n    this.y = [];\r\n    this.paint = false;\r\n  }\r\n\r\n  /**\r\n   * Coordinates to push\r\n   */\r\n  push(x, y) {\r\n    this.x.push(x);\r\n    this.y.push(y);\r\n  }\r\n\r\n  clear() {\r\n    this.x = [];\r\n    this.y = [];\r\n  }\r\n\r\n  setPaintTrue() {\r\n    this.paint = true;\r\n  }\r\n\r\n  setPaintFalse() {\r\n    this.paint = false;\r\n  }\r\n}\r\n\r\nclass Canvas extends React.Component {\r\n  state = {\r\n    paint: false,\r\n    canvasHeight: 5000,\r\n    canvasWidth: 5000,\r\n    strokeStyle: \"#000000\",\r\n    linewidth: 4,\r\n    positionX: [],\r\n    positionY: [],\r\n    stroke: true,\r\n    socket: socketIOClient(this.props.ip),\r\n    pageUrl: \"http://\" + this.props.ip,\r\n    users: 0,\r\n    connectedSockets: null\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.canvas = React.createRef();\r\n    this.bottomScroll = React.createRef();\r\n    this.topScroll = React.createRef();\r\n    this.tools = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    //Set map to the state\r\n\r\n    this.setState({ connectedSockets: new Map() });\r\n\r\n    //Fill canvas with data\r\n    let context = this.canvas.current.getContext(\"2d\");\r\n    context.fillStyle = \"white\";\r\n    context.fillRect(0, 0, this.state.canvasWidth, this.state.canvasHeight);\r\n\r\n    fetch(this.state.pageUrl + \"/getdata\")\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        //Load data and draw on canvas\r\n        this.saveDataDraw(data, context);\r\n      });\r\n\r\n    //window.addEventListener(\"load\".this.updateDimensions);\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n\r\n  updateDimensions = () => {};\r\n\r\n  saveDataDraw = (arr, context) => {\r\n    for (var i = 0; i < arr.length; i++) {\r\n      context.strokeStyle = arr[i].color;\r\n      context.lineJoin = \"round\";\r\n      context.lineWidth = arr[i].linewidth;\r\n      for (var a = 1; a < arr[i].x.length || a < arr[i].y.length; a++) {\r\n        context.beginPath();\r\n        context.moveTo(arr[i].x[a - 1], arr[i].y[a - 1]);\r\n        context.lineTo(arr[i].x[a], arr[i].y[a]);\r\n        context.closePath();\r\n        context.stroke();\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClick = event => {\r\n    if (this.state.stroke) {\r\n      var context = this.canvas.current.getContext(\"2d\");\r\n\r\n      let boardX =\r\n        event.clientX - this.canvas.current.getBoundingClientRect()[\"x\"];\r\n      let boardY =\r\n        event.clientY - this.canvas.current.getBoundingClientRect()[\"y\"];\r\n\r\n      context.fillStyle = this.state.strokeStyle;\r\n\r\n      context.beginPath();\r\n      context.arc(boardX, boardY, this.state.linewidth / 2, 0, 2 * Math.PI);\r\n      context.closePath();\r\n      context.fill();\r\n\r\n      this.state.socket.emit(\"mouseClick\", [\r\n        boardX,\r\n        boardY,\r\n        this.state.strokeStyle,\r\n        this.state.linewidth\r\n      ]);\r\n\r\n      // context.arc(boardX, boardY, this.state.linewidth, 0, 2 * Math.PI, true);\r\n    } else if (this.state.fill) {\r\n      // var context = this.canvas.current.getContext(\"2d\");\r\n      // let boardX =\r\n      //   event.clientX - this.canvas.current.getBoundingClientRect()[\"x\"];\r\n      // let boardY =\r\n      //   event.clientY - this.canvas.current.getBoundingClientRect()[\"y\"];\r\n      // this.fillFuncHelper(boardX, boardY);\r\n    }\r\n  };\r\n\r\n  handleClickReceive = (boardX, boardY, strokeStyle, lineWidth) => {\r\n    var context = this.canvas.current.getContext(\"2d\");\r\n\r\n    context.fillStyle = strokeStyle;\r\n\r\n    context.beginPath();\r\n    context.arc(boardX, boardY, lineWidth / 2, 0, 2 * Math.PI);\r\n    context.closePath();\r\n    context.fill();\r\n  };\r\n\r\n  fillFuncHelper = (startX, startY) => {\r\n    var context = this.canvas.current.getContext(\"2d\");\r\n    var myImageData = context.getImageData(startX, startY, 2, 2);\r\n\r\n    var selectedColor = this.hexToRGB(this.state.strokeStyle);\r\n    var boardColor = myImageData.data;\r\n    context.fillStyle = selectedColor;\r\n    this.fillFunc(startX, startY, selectedColor, boardColor, context);\r\n  };\r\n\r\n  fillFunc = (posX, posY, selectedColor, boardColor, context) => {\r\n    var currentImageData = context.getImageData(posX, posY, 2, 2);\r\n    if (posX < 0 || posX > 1000) {\r\n      return;\r\n    } else if (posY < 0 || posY > 800) {\r\n      return;\r\n    } else if (\r\n      currentImageData.data[0] === selectedColor[0] &&\r\n      currentImageData.data[1] === selectedColor[1] &&\r\n      currentImageData.data[2] === selectedColor[2]\r\n    ) {\r\n      return;\r\n    } else {\r\n      //Fill current space\r\n      context.fillRect(posX, posY, 2, 2);\r\n\r\n      this.fillFunc(posX + 2, posY, selectedColor, boardColor, context);\r\n      this.fillFunc(posX, posY + 2, selectedColor, boardColor, context);\r\n      this.fillFunc(posX - 2, posY, selectedColor, boardColor, context);\r\n      this.fillFunc(posX, posY - 2, selectedColor, boardColor, context);\r\n    }\r\n  };\r\n\r\n  drawFunction = (mouseX, mouseY) => {\r\n    //console.log(\"Draw Function\");\r\n    let context = this.canvas.current.getContext(\"2d\");\r\n\r\n    context.strokeStyle = this.state.strokeStyle;\r\n    context.lineJoin = \"round\";\r\n    context.lineWidth = this.state.linewidth;\r\n\r\n    context.beginPath();\r\n\r\n    context.moveTo(\r\n      this.state.positionX[this.state.positionX.length - 2],\r\n      this.state.positionY[this.state.positionY.length - 2]\r\n    );\r\n\r\n    context.lineTo(\r\n      this.state.positionX[this.state.positionX.length - 1],\r\n      this.state.positionY[this.state.positionY.length - 1]\r\n    );\r\n\r\n    context.closePath();\r\n    context.stroke();\r\n  };\r\n\r\n  drawFunctionRecieving = (socketID, color, width, socketObj) => {\r\n    let context = this.canvas.current.getContext(\"2d\");\r\n\r\n    context.strokeStyle = color;\r\n    context.lineJoin = \"round\";\r\n    context.lineWidth = width;\r\n\r\n    context.beginPath();\r\n\r\n    context.moveTo(\r\n      socketObj.x[socketObj.x.length - 2],\r\n      socketObj.y[socketObj.y.length - 2]\r\n    );\r\n\r\n    context.lineTo(\r\n      socketObj.x[socketObj.x.length - 1],\r\n      socketObj.y[socketObj.y.length - 1]\r\n    );\r\n\r\n    context.closePath();\r\n    context.stroke();\r\n  };\r\n\r\n  handleMouseDown = event => {\r\n    if (!this.state.paint) {\r\n      this.state.socket.emit(\"mouseDown\", this.state.socket.id);\r\n    }\r\n\r\n    if (this.state.stroke) {\r\n      this.setState({ paint: true });\r\n    }\r\n    //console.log(\"mouseDown\");\r\n  };\r\n\r\n  handleMouseMove = event => {\r\n    if (this.state.stroke && this.state.paint) {\r\n      let boardX =\r\n        event.clientX - this.canvas.current.getBoundingClientRect()[\"x\"];\r\n      let boardY =\r\n        event.clientY - this.canvas.current.getBoundingClientRect()[\"y\"];\r\n      let tempX = this.state.positionX;\r\n      let tempY = this.state.positionY;\r\n      tempX.push(boardX);\r\n      tempY.push(boardY);\r\n\r\n      this.state.socket.emit(\"draw\", [\r\n        boardX,\r\n        boardY,\r\n        this.state.strokeStyle,\r\n        this.state.linewidth\r\n      ]);\r\n\r\n      this.setState({ positionX: tempX });\r\n      this.setState({ positionY: tempY });\r\n\r\n      //Add some buffering. Position for x and y are added to the array.\r\n      if (this.state.positionX.length > 1 && this.state.positionY.length > 1) {\r\n        this.drawFunction(boardX, boardY);\r\n      }\r\n    } else {\r\n    }\r\n  };\r\n\r\n  handleMouseUp = event => {\r\n    if (this.state.stroke) {\r\n      this.setState({ paint: false });\r\n\r\n      //Send data to database.\r\n      let jsonObj = {\r\n        x: this.state.positionX,\r\n        y: this.state.positionY,\r\n        linewidth: this.state.linewidth,\r\n        color: this.state.strokeStyle\r\n      };\r\n\r\n      fetch(this.state.pageUrl + \"/postdata\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        cache: \"no-cache\",\r\n        credentials: \"same-origin\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(jsonObj)\r\n      })\r\n        .then(function(response) {})\r\n        .then(function(data) {});\r\n\r\n      //Clear the arrays.\r\n      this.setState({ positionX: [] });\r\n      this.setState({ positionY: [] });\r\n    }\r\n\r\n    if (this.state.paint) {\r\n      this.state.socket.emit(\"mouseUp\", this.state.socket.id);\r\n    }\r\n  };\r\n\r\n  handleClear = () => {\r\n    this.canvas.current.getContext(\"2d\").fillStyle = \"white\";\r\n    this.canvas.current\r\n      .getContext(\"2d\")\r\n      .fillRect(0, 0, this.state.canvasWidth, this.state.canvasHeight);\r\n\r\n    //Clear message for connected clients\r\n    this.state.socket.emit(\"clear\", this.state.socket.id);\r\n\r\n    let jsonObj = {\r\n      clear: true\r\n    };\r\n\r\n    //Clear message for database\r\n    fetch(this.state.pageUrl + \"/clearPost\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(jsonObj)\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {});\r\n\r\n    this.setState({ positionX: [] });\r\n    this.setState({ positionY: [] });\r\n  };\r\n\r\n  handleClearReceive = () => {\r\n    this.canvas.current.getContext(\"2d\").fillStyle = \"white\";\r\n    this.canvas.current\r\n      .getContext(\"2d\")\r\n      .fillRect(0, 0, this.state.canvasWidth, this.state.canvasHeight);\r\n\r\n    //this.setState({ positionX: [] });\r\n    //this.setState({ positionY: [] });\r\n  };\r\n\r\n  handleColorChange = picker => {\r\n    this.setState({ strokeStyle: picker.hex });\r\n  };\r\n\r\n  hoverSketch = (color, event) => {};\r\n\r\n  toggleStroke = () => {\r\n    this.setState({ stroke: true, fill: false });\r\n  };\r\n\r\n  toggleFill = () => {\r\n    this.setState({ stroke: false, fill: true });\r\n  };\r\n\r\n  toggleSize = event => {\r\n    this.setState({ linewidth: event.target.value });\r\n  };\r\n\r\n  hexToRGB = hex => {\r\n    var red = hex.charAt(1) + hex.charAt(2);\r\n    var green = hex.charAt(3) + hex.charAt(4);\r\n    var blue = hex.charAt(5) + hex.charAt(6);\r\n\r\n    red = parseInt(red, 16);\r\n    green = parseInt(green, 16);\r\n    blue = parseInt(blue, 16);\r\n\r\n    return [red, green, blue];\r\n  };\r\n\r\n  changeScroll = event => {\r\n    this.bottomScroll.current.scrollLeft = this.topScroll.current.scrollLeft;\r\n  };\r\n\r\n  getToolComp = () => {\r\n    return (\r\n      <Toolbar\r\n        onClearClick={this.handleClear}\r\n        onClickStroke={this.toggleStroke}\r\n        onClickFill={this.toggleFill}\r\n        onClickSize={this.toggleSize}\r\n        onColorChange={this.handleColorChange}\r\n        color={this.state.strokeStyle}\r\n      />\r\n    );\r\n  };\r\n\r\n  render() {\r\n    this.state.socket.on(\"socketConnect\", socketIDIterator => {\r\n      for (var i = 0; i < socketIDIterator.length; i++) {\r\n        if (this.state.connectedSockets.has(socketIDIterator[i])) {\r\n          //Do nothing\r\n        } else {\r\n          //Add to current list\r\n          this.state.connectedSockets.set(\r\n            socketIDIterator[i],\r\n            new SocketInstance(socketIDIterator[i])\r\n          );\r\n          this.setState({ users: this.state.connectedSockets.size });\r\n          console.log(\"Connect: \" + this.state.connectedSockets.size);\r\n          console.log(this.state.connectedSockets);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.state.socket.on(\"drawReceive\", data => {\r\n      if (data[0] !== this.state.socket.id) {\r\n        let socketObj = this.state.connectedSockets.get(data[0]);\r\n        //console.log(socketObj);\r\n\r\n        //data[0] = socket id\r\n        //data[1] = x\r\n        //data[2] = y\r\n        //data[3] = color\r\n        //data[4] = width\r\n\r\n        if (socketObj) {\r\n          socketObj.x.push(data[1]);\r\n          socketObj.y.push(data[2]);\r\n          this.drawFunctionRecieving(data[0], data[3], data[4], socketObj);\r\n        } else {\r\n          //console.error(\"Found no socket.\");\r\n        }\r\n      }\r\n    });\r\n\r\n    this.state.socket.on(\"mouseDownReceive\", socketID => {\r\n      if (socketID !== this.state.socket.id) {\r\n        var socketObj = this.state.connectedSockets.get(socketID);\r\n        if (socketObj != null) {\r\n          socketObj.setPaintTrue();\r\n        }\r\n      }\r\n    });\r\n\r\n    this.state.socket.on(\"mouseUpReceive\", socketID => {\r\n      if (socketID !== this.state.socket.id) {\r\n        var socketObj = this.state.connectedSockets.get(socketID);\r\n        if (socketObj != null) {\r\n          socketObj.x = [];\r\n          socketObj.y = [];\r\n          socketObj.setPaintFalse();\r\n        }\r\n      }\r\n    });\r\n\r\n    this.state.socket.on(\"clearReceive\", socketID => {\r\n      if (socketID !== this.state.socket.id) {\r\n        this.handleClearReceive();\r\n      }\r\n    });\r\n\r\n    this.state.socket.on(\"mouseClickReceive\", data => {\r\n      if (data[0] !== this.state.socket.id) {\r\n        this.handleClickReceive(data[1], data[2], data[3], data[4]);\r\n      }\r\n    });\r\n\r\n    this.state.socket.on(\"disconnectUser\", socketID => {\r\n      this.state.connectedSockets.delete(socketID);\r\n      console.log(\"Disconnect. Size: \" + this.state.connectedSockets.size);\r\n      console.log(this.state.connectedSockets);\r\n      this.setState({ users: this.state.connectedSockets.size });\r\n    });\r\n\r\n    //In line css\r\n    const divStyle = {\r\n      width: this.state.canvasWidth,\r\n      height: \"1px\"\r\n    };\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div class=\"contain\">\r\n          <div className=\"Canvas\">\r\n            <div\r\n              onScroll={this.changeScroll}\r\n              className=\"topScroll\"\r\n              ref={this.topScroll}\r\n            >\r\n              <div style={divStyle} />\r\n            </div>\r\n            <div className=\"canvasWrapper\" ref={this.bottomScroll}>\r\n              <canvas\r\n                onClick={this.handleClick}\r\n                onMouseDown={this.handleMouseDown}\r\n                onMouseMove={this.handleMouseMove}\r\n                onMouseUp={this.handleMouseUp}\r\n                height={this.state.canvasHeight}\r\n                width={this.state.canvasWidth}\r\n                className=\"canvas\"\r\n                ref={this.canvas}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"tools\" ref={this.tools}>\r\n            <h6>\r\n              Online Users: {this.state.users > 0 ? this.state.users - 1 : 0}\r\n            </h6>\r\n            <br />\r\n            <Router>\r\n              {/* <div className=\"toolsNav\">\r\n                <nav aria-label=\"Page navigation example\">\r\n                  <ul className=\"pagination\">\r\n                    <li className=\"page-item\">\r\n                      <Link className=\"page-link\" to=\"/\">\r\n                        Paint Tools\r\n                      </Link>\r\n                    </li>\r\n                  </ul>\r\n                </nav>\r\n              </div> */}\r\n              <Route exact path=\"/\" component={this.getToolComp} />\r\n            </Router>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Canvas;\r\n","import React from \"react\";\r\nimport \"../../node_modules/bootstrap/dist/css/bootstrap.css\";\r\nimport \"../../node_modules/popper.js/dist/popper.js\";\r\nimport \"../../node_modules/jquery/dist/jquery.js\";\r\nimport \"../../node_modules/bootstrap/dist/js/bootstrap.js\";\r\n\r\nclass Navigation extends React.Component {\r\n  onClickAbout = () => {\r\n    alert(\"Stuff\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <a class=\"navbar-brand\" href=\"\">\r\n          Paint App\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav aboutDiv\">\r\n            <li className=\"nav-item\">\r\n              <a\r\n                className=\"aboutDiv nav-link\"\r\n                data-toggle=\"modal\"\r\n                data-target=\"#exampleModal\"\r\n                href=\"\"\r\n              >\r\n                About\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div\r\n          class=\"modal fade\"\r\n          id=\"exampleModal\"\r\n          tabindex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"exampleModalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div class=\"modal-dialog\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">\r\n                  About\r\n                </h5>\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <p>Real Time Paint Application</p>\r\n                <p>Frontend: React</p>\r\n                <p>Backend: Express</p>\r\n                <p>\r\n                  Libraries Used:\r\n                  <br />\r\n                  1. Bootstrap\r\n                  <br />\r\n                  2. React-Router\r\n                </p>\r\n                <p>\r\n                  Source Code: <br />\r\n                  https://github.com/320834/PaintApp <a />\r\n                </p>\r\n                <p>\r\n                  Color Picker: <br />\r\n                  <a>https://github.com/casesandberg/react-color/</a>\r\n                </p>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-secondary\"\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\nimport Canvas from \"./Components/Canvas\";\nimport Navigation from \"./Components/Navigation\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.welcomeButton = React.createRef();\n  }\n\n  state = {\n    welcomeText: \"\",\n    ip: \"34.228.247.214\"\n  };\n\n  welcomeDiv = () => {\n    return (\n      <div\n        class=\"modal fade\"\n        id=\"exampleModalCenter\"\n        tabindex=\"-1\"\n        role=\"dialog\"\n        aria-labelledby=\"exampleModalCenterTitle\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">\n                Welcome\n              </h5>\n              <button\n                type=\"button\"\n                class=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div class=\"modal-body\">...</div>\n            <div class=\"modal-footer\">\n              <button\n                type=\"button\"\n                class=\"btn btn-secondary\"\n                data-dismiss=\"modal\"\n              >\n                Close\n              </button>\n              <button type=\"button\" class=\"btn btn-primary\">\n                Save changes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  componentDidMount = () => {\n    if (window.innerWidth < 500) {\n      this.setState({\n        welcomeText:\n          \"We apologize for the inconvience. Phone functionality has not been fully implemented. Please use a personal computer\"\n      });\n      this.welcomeButton.current.click();\n    } else {\n      this.setState({\n        welcomeText:\n          \"Please draw anything in the background. Your strokes are displayed real time to other connected users to see.\"\n      });\n      this.welcomeButton.current.click();\n    }\n  };\n\n  welcomeText = () => {\n    return (\n      <p>\n        Welcome to my real-time paint application.\n        <br />\n        <br />\n        {this.state.welcomeText}\n      </p>\n    );\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"totalBody\">\n          <Navigation />\n          <Canvas ip={this.state.ip} />\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"welcomeButton\"\n          data-toggle=\"modal\"\n          data-target=\"#exampleModalCenter\"\n          ref={this.welcomeButton}\n        >\n          Launch demo modal\n        </button>\n        <div>\n          <div\n            class=\"modal fade\"\n            id=\"exampleModalCenter\"\n            tabindex=\"-1\"\n            role=\"dialog\"\n            aria-labelledby=\"exampleModalCenterTitle\"\n            aria-hidden=\"true\"\n          >\n            <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                  <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">\n                    Hello\n                  </h5>\n                  <button\n                    type=\"button\"\n                    class=\"close\"\n                    data-dismiss=\"modal\"\n                    aria-label=\"Close\"\n                  >\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <div class=\"modal-body\">{this.welcomeText()}</div>\n                <div class=\"modal-footer\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-secondary\"\n                    data-dismiss=\"modal\"\n                  >\n                    Close\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}